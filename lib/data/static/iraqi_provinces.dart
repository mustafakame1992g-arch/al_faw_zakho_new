// lib/data/static/iraqi_provinces.dart

/// ๐บ๏ธ ูุงุฆูุฉ ุงููุญุงูุธุงุช ุงูุนุฑุงููุฉ ุงูู 19
class IraqiProvinces {
  // ุงููุงุฆูุฉ ุงููุงููุฉ ูููุญุงูุธุงุช ุงูุนุฑุงููุฉ
  static const List<String> allProvinces = [
    'ุจุบุฏุงุฏ',
    'ุงูุจุตุฑุฉ',
    'ููููู',
    'ุฃุฑุจูู',
    'ุงูุณูููุงููุฉ',
    'ุฏููู',
    'ูุฑููู',
    'ุฏูุงูู',
    'ุงูุฃูุจุงุฑ',
    'ุตูุงุญ ุงูุฏูู',
    'ุจุงุจู',
    'ูุฑุจูุงุก',
    'ุงููุฌู',
    'ูุงุณุท',
    'ููุณุงู',
    'ุฐู ูุงุฑ',
    'ุงููุงุฏุณูุฉ',
    'ุงููุซูู',
    'ุญูุจุฌุฉ',
  ];
    // ุฃุณูุงุก ุงูุนุฑุถ ุจุงูุฅูุฌููุฒูุฉ ููุงุจู ุงูุงุณู ุงูุนุฑุจู (ูุญุชูุธ ุจุงูุนุฑุจู ูููุชุงุญ ุฏุงุฎูู)
  static const Map<String, String> arToEn = {
    'ุจุบุฏุงุฏ': 'Baghdad',
    'ุงูุจุตุฑุฉ': 'Basra',
    'ููููู': 'Nineveh',
    'ุฃุฑุจูู': 'Erbil',
    'ุงูุณูููุงููุฉ': 'Sulaymaniyah',
    'ุฏููู': 'Duhok',
    'ูุฑููู': 'Kirkuk',
    'ุฏูุงูู': 'Diyala',
    'ุงูุฃูุจุงุฑ': 'Anbar',
    'ุตูุงุญ ุงูุฏูู': 'Salah al-Din',
    'ุจุงุจู': 'Babil',
    'ูุฑุจูุงุก': 'Karbala',
    'ุงููุฌู': 'Najaf',
    'ูุงุณุท': 'Wasit',
    'ููุณุงู': 'Maysan',
    'ุฐู ูุงุฑ': 'Dhi Qar',
    'ุงููุงุฏุณูุฉ': 'Al-Qadisiyah',
    'ุงููุซูู': 'Muthanna',
    'ุญูุจุฌุฉ': 'Halabja',
  };

  /// ุชุฑุฌูุฉ ุงุณู ุงููุญุงูุธุฉ ููุนุฑุถ ููุท ุญุณุจ ููุฏ ุงููุบุฉ ('ar' ุฃู 'en')
  static String displayName(String arName, String langCode) {
    if (langCode == 'en') {
      return arToEn[arName] ?? arName;
    }
    return arName;
  }


  /// ุงูุชุญูู ูู ุตุญุฉ ุงููุญุงูุธุฉ
  static bool isValidProvince(String province) {
    return allProvinces.contains(province);
  }

  /// ุงูุญุตูู ุนูู ุนุฏุฏ ุงููุญุงูุธุงุช
  static int get totalCount => allProvinces.length;

  /// ุงูุญุตูู ุนูู ูุญุงูุธุฉ ุจุงูุฑูู ุงูุชุณูุณูู
  static String getProvinceByIndex(int index) {
    if (index < 0 || index >= allProvinces.length) {
      throw RangeError('Index $index is out of bounds for provinces list');
    }
    return allProvinces[index];
  }

  /// ุงูุจุญุซ ุนู ูุญุงูุธุฉ
  static String? findProvince(String query) {
    final normalizedQuery = query.trim().toLowerCase();
    for (final province in allProvinces) {
      if (province.toLowerCase().contains(normalizedQuery)) {
        return province;
      }
    }
    return null;
  }

  /// ุงูุญุตูู ุนูู ุฃุณูุงุก ุงููุญุงูุธุงุช ููุบุฉ ูุญุฏุฏุฉ
  static List<String> getProvincesForLanguage(String languageCode) {
    // ูู ูุฐู ุงูุญุงูุฉุ ุงููุงุฆูุฉ ูุงุญุฏุฉ ููุบุชูู
    // ูููู ุชูุณูุนูุง ูู ุงููุณุชูุจู ุฅุฐุง ุงุญุชุฌูุง ุชุฑุฌูุฉ ุงูุฃุณูุงุก
    return allProvinces;
  }

  /// ุงูุชุญูู ูู ุงูุชูุงู ุงูุจูุงูุงุช
  static bool get isComplete => allProvinces.length == 19;

  /// ุงูุญุตูู ุนูู ุฎุฑูุทุฉ ุงููุญุงูุธุงุช ูุน ุนุฏุฏ ุงููุฑุดุญูู (ููุงุณุชุฎุฏุงู ุงููุณุชูุจูู)
  static Map<String, int> getProvinceCandidateCounts(List<dynamic> candidates) {
    final Map<String, int> counts = {};
    for (final province in allProvinces) {
      counts[province] = 0;
    }
    
    for (final candidate in candidates) {
      if (candidate.province != null && isValidProvince(candidate.province)) {
        counts[candidate.province] = (counts[candidate.province] ?? 0) + 1;
      }
    }
    
    return counts;
  }
}